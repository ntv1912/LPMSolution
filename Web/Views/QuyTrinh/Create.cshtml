@model Infrastructure.Models.QuyTrinh
@{
	ViewData["Title"] = "Create";
}
<h1>Create</h1>
<h4>Thu Tuc</h4>
<br />
<div class="row">
	<form asp-action="Create">
		<div asp-validation-summary="ModelOnly"></div>
		<div class="form-group">
			<label asp-for="MaQuyTrinh" class="control-label"></label>
			<input asp-for="MaQuyTrinh" class="form-control" />
			<span asp-validation-for="MaQuyTrinh" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="TenQuyTrinh" class="control-label"></label>
			<input asp-for="TenQuyTrinh" class="form-control" />
			<span asp-validation-for="TenQuyTrinh" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="MoTa" class="control-label"></label>
			<input asp-for="MoTa" class="form-control" />
			<span asp-validation-for="MoTa" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="ThuTucId" class="control-label"></label>
			<select asp-for="ThuTucId" asp-items="ViewBag.ThuTucId" class="form-control"></select>
		</div>

		<input type="submit" class="btn btn-primary" />
		@if (!ViewData.ModelState.IsValid)
		{
			<div class="alert alert-danger">
				@Html.ValidationSummary(false, "", new { @class = "text-danger" })
			</div>
		}
	</form>
</div>
@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}